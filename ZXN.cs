using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ZXNTCount
{
    class ZXN
    {
        public static Z80Node[] Z80Array =
        {
            // https://clrhome.org/table/
            // http://ped.7gods.org/Z80N_table_ClrHome.html
            // https://wiki.specnext.dev/Extended_Z80_instruction_set#Z80N_instructions_opcodes
            // Flag Order: C, N, P/V, H, Z, S
            new Z80Node("00", "nop", 1, new int[] { 4 }, "No operation is performed.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("01", "ld bc,**", 3, new int[] { 10 }, "Loads ** into bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("02", "ld (bc),a", 1, new int[] { 7 }, "Stores a into the memory location pointed to by bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("03", "inc bc", 1, new int[] { 6 }, "Adds one to bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("04", "inc b", 1, new int[] { 4 }, "Adds one to b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("05", "dec b", 1, new int[] { 4 }, "Subtracts one from b.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("06", "ld b,*", 2, new int[] { 7 }, "Loads * into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("07", "rlca", 1, new int[] { 4 }, "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.Unaffected, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("08", "ex af,af'", 1, new int[] { 4 }, "Exchanges the 16-bit contents of af and af'.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("09", "add hl,bc", 1, new int[] { 11 }, "The value of bc is added to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("0A", "ld a,(bc)", 1, new int[] { 7 }, "Loads the value pointed to by bc into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("0B", "dec bc", 1, new int[] { 6 }, "Subtracts one from bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("0C", "inc c", 1, new int[] { 4 }, "Adds one to c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("0D", "dec c", 1, new int[] { 4 }, "Subtracts one from c.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("0E", "ld c,*", 2, new int[] { 7 }, "Loads * into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("0F", "rrca", 1, new int[] { 4 }, "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.Unaffected, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("10", "djnz *", 2, new int[] { 13, 8 }, "The b register is decremented, and if not zero, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("11", "ld de,**", 3, new int[] { 10 }, "Loads ** into de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("12", "ld (de),a", 1, new int[] { 7 }, "Stores a into the memory location pointed to by de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("13", "inc de", 1, new int[] { 6 }, "Adds one to de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("14", "inc d", 1, new int[] { 4 }, "Adds one to d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("15", "dec d", 1, new int[] { 4 }, "Subtracts one from d.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("16", "ld d,*", 2, new int[] { 7 }, "Loads * into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("17", "rla", 1, new int[] { 4 }, "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.Unaffected, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("18", "jr *", 2, new int[] { 12 }, "The signed value * is added to pc. The jump is measured from the start of the instruction opcode.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("19", "add hl,de", 1, new int[] { 11 }, "The value of de is added to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("1A", "ld a,(de)", 1, new int[] { 7 }, "Loads the value pointed to by de into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("1B", "dec de", 1, new int[] { 6 }, "Subtracts one from de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("1C", "inc e", 1, new int[] { 4 }, "Adds one to e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("1D", "dec e", 1, new int[] { 4 }, "Subtracts one from e.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("1E", "ld e,*", 2, new int[] { 7 }, "Loads * into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("1F", "rra", 1, new int[] { 4 }, "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.Unaffected, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("20", "jr nz,*", 2, new int[] { 12, 7 }, "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("21", "ld hl,**", 3, new int[] { 10 }, "Loads ** into hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("22", "ld (**),hl", 3, new int[] { 16 }, "Stores hl into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("23", "inc hl", 1, new int[] { 6 }, "Adds one to hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("24", "inc h", 1, new int[] { 4 }, "Adds one to h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("25", "dec h", 1, new int[] { 4 }, "Subtracts one from h.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("26", "ld h,*", 2, new int[] { 7 }, "Loads * into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("27", "daa", 1, new int[] { 4 }, "Adjusts a for BCD addition and subtraction operations.", new FlagType[] { FlagType.Exceptional, FlagType.Unaffected, FlagType.DetectsParity, FlagType.Exceptional, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("28", "jr z,*", 2, new int[] { 12, 7 }, "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("29", "add hl,hl", 1, new int[] { 11 }, "The value of hl is added to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("2A", "ld hl,(**)", 3, new int[] { 16 }, "Loads the value pointed to by ** into hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("2B", "dec hl", 1, new int[] { 6 }, "Subtracts one from hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("2C", "inc l", 1, new int[] { 4 }, "Adds one to l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("2D", "dec l", 1, new int[] { 4 }, "Subtracts one from l.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("2E", "ld l,*", 2, new int[] { 7 }, "Loads * into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("2F", "cpl", 1, new int[] { 4 }, "The contents of a are inverted (one's complement).", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unaffected, FlagType.Set, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("30", "jr nc,*", 2, new int[] { 12, 7 }, "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("31", "ld sp,**", 3, new int[] { 10 }, "Loads ** into sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("32", "ld (**),a", 3, new int[] { 13 }, "Stores a into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("33", "inc sp", 1, new int[] { 6 }, "Adds one to sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("34", "inc (hl)", 1, new int[] { 11 }, "Adds one to (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("35", "dec (hl)", 1, new int[] { 11 }, "Subtracts one from (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("36", "ld (hl),*", 2, new int[] { 10 }, "Loads * into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("37", "scf", 1, new int[] { 4 }, "Sets the carry flag.", new FlagType[] { FlagType.Set, FlagType.Reset, FlagType.Unaffected, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("38", "jr c,*", 2, new int[] { 12, 7 }, "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("39", "add hl,sp", 1, new int[] { 11 }, "The value of hl is added to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("3A", "ld a,(**)", 3, new int[] { 13 }, "Loads the value pointed to by ** into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("3B", "dec sp", 1, new int[] { 6 }, "Subtracts one from sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("3C", "inc a", 1, new int[] { 4 }, "Adds one to a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("3D", "dec a", 1, new int[] { 4 }, "Subtracts one from a.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("3E", "ld a,*", 2, new int[] { 7 }, "Loads * into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("3F", "ccf", 1, new int[] { 4 }, "Inverts the carry flag.", new FlagType[] { FlagType.Exceptional, FlagType.Reset, FlagType.Unaffected, FlagType.Exceptional, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("40", "ld b,b", 1, new int[] { 4 }, "The contents of b are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("41", "ld b,c", 1, new int[] { 4 }, "The contents of c are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("42", "ld b,d", 1, new int[] { 4 }, "The contents of d are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("43", "ld b,e", 1, new int[] { 4 }, "The contents of e are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("44", "ld b,h", 1, new int[] { 4 }, "The contents of h are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("45", "ld b,l", 1, new int[] { 4 }, "The contents of l are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("46", "ld b,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("47", "ld b,a", 1, new int[] { 4 }, "The contents of a are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("48", "ld c,b", 1, new int[] { 4 }, "The contents of b are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("49", "ld c,c", 1, new int[] { 4 }, "The contents of c are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("4A", "ld c,d", 1, new int[] { 4 }, "The contents of d are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("4B", "ld c,e", 1, new int[] { 4 }, "The contents of e are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("4C", "ld c,h", 1, new int[] { 4 }, "The contents of h are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("4D", "ld c,l", 1, new int[] { 4 }, "The contents of l are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("4E", "ld c,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("4F", "ld c,a", 1, new int[] { 4 }, "The contents of a are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("50", "ld d,b", 1, new int[] { 4 }, "The contents of b are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("51", "ld d,c", 1, new int[] { 4 }, "The contents of c are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("52", "ld d,d", 1, new int[] { 4 }, "The contents of d are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("53", "ld d,e", 1, new int[] { 4 }, "The contents of e are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("54", "ld d,h", 1, new int[] { 4 }, "The contents of h are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("55", "ld d,l", 1, new int[] { 4 }, "The contents of l are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("56", "ld d,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("57", "ld d,a", 1, new int[] { 4 }, "The contents of a are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("58", "ld e,b", 1, new int[] { 4 }, "The contents of b are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("59", "ld e,c", 1, new int[] { 4 }, "The contents of c are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("5A", "ld e,d", 1, new int[] { 4 }, "The contents of d are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("5B", "ld e,e", 1, new int[] { 4 }, "The contents of e are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("5C", "ld e,h", 1, new int[] { 4 }, "The contents of h are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("5D", "ld e,l", 1, new int[] { 4 }, "The contents of l are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("5E", "ld e,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("5F", "ld e,a", 1, new int[] { 4 }, "The contents of a are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("60", "ld h,b", 1, new int[] { 4 }, "The contents of b are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("61", "ld h,c", 1, new int[] { 4 }, "The contents of c are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("62", "ld h,d", 1, new int[] { 4 }, "The contents of d are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("63", "ld h,e", 1, new int[] { 4 }, "The contents of e are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("64", "ld h,h", 1, new int[] { 4 }, "The contents of h are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("65", "ld h,l", 1, new int[] { 4 }, "The contents of l are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("66", "ld h,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("67", "ld h,a", 1, new int[] { 4 }, "The contents of a are loaded into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("68", "ld l,b", 1, new int[] { 4 }, "The contents of b are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("69", "ld l,c", 1, new int[] { 4 }, "The contents of c are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("6A", "ld l,d", 1, new int[] { 4 }, "The contents of d are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("6B", "ld l,e", 1, new int[] { 4 }, "The contents of e are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("6C", "ld l,h", 1, new int[] { 4 }, "The contents of h are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("6D", "ld l,l", 1, new int[] { 4 }, "The contents of l are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("6E", "ld l,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("6F", "ld l,a", 1, new int[] { 4 }, "The contents of a are loaded into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("70", "ld (hl),b", 1, new int[] { 7 }, "The contents of b are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("71", "ld (hl),c", 1, new int[] { 7 }, "The contents of c are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("72", "ld (hl),d", 1, new int[] { 7 }, "The contents of d are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("73", "ld (hl),e", 1, new int[] { 7 }, "The contents of e are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("74", "ld (hl),h", 1, new int[] { 7 }, "The contents of h are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("75", "ld (hl),l", 1, new int[] { 7 }, "The contents of l are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("76", "halt", 1, new int[] { 4 }, "Suspends CPU operation until an interrupt or reset occurs.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("77", "ld (hl),a", 1, new int[] { 7 }, "The contents of a are loaded into (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("78", "ld a,b", 1, new int[] { 4 }, "The contents of b are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("79", "ld a,c", 1, new int[] { 4 }, "The contents of c are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("7A", "ld a,d", 1, new int[] { 4 }, "The contents of d are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("7B", "ld a,e", 1, new int[] { 4 }, "The contents of e are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("7C", "ld a,h", 1, new int[] { 4 }, "The contents of h are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("7D", "ld a,l", 1, new int[] { 4 }, "The contents of l are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("7E", "ld a,(hl)", 1, new int[] { 7 }, "The contents of (hl) are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("7F", "ld a,a", 1, new int[] { 4 }, "The contents of a are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("80", "add a,b", 1, new int[] { 4 }, "Adds b to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("81", "add a,c", 1, new int[] { 4 }, "Adds c to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("82", "add a,d", 1, new int[] { 4 }, "Adds d to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("83", "add a,e", 1, new int[] { 4 }, "Adds e to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("84", "add a,h", 1, new int[] { 4 }, "Adds h to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("85", "add a,l", 1, new int[] { 4 }, "Adds l to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("86", "add a,(hl)", 1, new int[] { 7 }, "Adds (hl) to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("87", "add a,a", 1, new int[] { 4 }, "Adds a to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("88", "adc a,b", 1, new int[] { 4 }, "Adds b and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("89", "adc a,c", 1, new int[] { 4 }, "Adds c and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("8A", "adc a,d", 1, new int[] { 4 }, "Adds d and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("8B", "adc a,e", 1, new int[] { 4 }, "Adds e and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("8C", "adc a,h", 1, new int[] { 4 }, "Adds h and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("8D", "adc a,l", 1, new int[] { 4 }, "Adds l and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("8E", "adc a,(hl)", 1, new int[] { 7 }, "Adds (hl) and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("8F", "adc a,a", 1, new int[] { 4 }, "Adds a and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("90", "sub b", 1, new int[] { 4 }, "Subtracts b from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("91", "sub c", 1, new int[] { 4 }, "Subtracts c from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("92", "sub d", 1, new int[] { 4 }, "Subtracts d from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("93", "sub e", 1, new int[] { 4 }, "Subtracts e from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("94", "sub h", 1, new int[] { 4 }, "Subtracts h from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("95", "sub l", 1, new int[] { 4 }, "Subtracts l from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("96", "sub (hl)", 1, new int[] { 7 }, "Subtracts (hl) from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("97", "sub a", 1, new int[] { 4 }, "Subtracts a from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("98", "sbc a,b", 1, new int[] { 4 }, "Subtracts b and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("99", "sbc a,c", 1, new int[] { 4 }, "Subtracts c and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("9A", "sbc a,d", 1, new int[] { 4 }, "Subtracts d and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("9B", "sbc a,e", 1, new int[] { 4 }, "Subtracts e and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("9C", "sbc a,h", 1, new int[] { 4 }, "Subtracts h and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("9D", "sbc a,l", 1, new int[] { 4 }, "Subtracts l and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("9E", "sbc a,(hl)", 1, new int[] { 7 }, "Subtracts (hl) and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("9F", "sbc a,a", 1, new int[] { 4 }, "Subtracts a and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A0", "and b", 1, new int[] { 4 }, "Bitwise AND on a with b.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A1", "and c", 1, new int[] { 4 }, "Bitwise AND on a with c.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A2", "and d", 1, new int[] { 4 }, "Bitwise AND on a with d.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A3", "and e", 1, new int[] { 4 }, "Bitwise AND on a with e.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A4", "and h", 1, new int[] { 4 }, "Bitwise AND on a with h.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A5", "and l", 1, new int[] { 4 }, "Bitwise AND on a with l.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A6", "and (hl)", 1, new int[] { 7 }, "Bitwise AND on a with (hl).", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A7", "and a", 1, new int[] { 4 }, "Bitwise AND on a with a.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A8", "xor b", 1, new int[] { 4 }, "Bitwise XOR on a with b.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("A9", "xor c", 1, new int[] { 4 }, "Bitwise XOR on a with c.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("AA", "xor d", 1, new int[] { 4 }, "Bitwise XOR on a with d.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("AB", "xor e", 1, new int[] { 4 }, "Bitwise XOR on a with e.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("AC", "xor h", 1, new int[] { 4 }, "Bitwise XOR on a with h.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("AD", "xor l", 1, new int[] { 4 }, "Bitwise XOR on a with l.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("AE", "xor (hl)", 1, new int[] { 7 }, "Bitwise XOR on a with (hl).", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("AF", "xor a", 1, new int[] { 4 }, "Bitwise XOR on a with a.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B0", "or b", 1, new int[] { 4 }, "Bitwise OR on a with b.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B1", "or c", 1, new int[] { 4 }, "Bitwise OR on a with c.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B2", "or d", 1, new int[] { 4 }, "Bitwise OR on a with d.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B3", "or e", 1, new int[] { 4 }, "Bitwise OR on a with e.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B4", "or h", 1, new int[] { 4 }, "Bitwise OR on a with h.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B5", "or l", 1, new int[] { 4 }, "Bitwise OR on a with l.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B6", "or (hl)", 1, new int[] { 7 }, "Bitwise OR on a with (hl).", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B7", "or a", 1, new int[] { 4 }, "Bitwise OR on a with a.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B8", "cp b", 1, new int[] { 4 }, "Subtracts b from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("B9", "cp c", 1, new int[] { 4 }, "Subtracts c from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("BA", "cp d", 1, new int[] { 4 }, "Subtracts d from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("BB", "cp e", 1, new int[] { 4 }, "Subtracts e from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("BC", "cp h", 1, new int[] { 4 }, "Subtracts h from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("BD", "cp l", 1, new int[] { 4 }, "Subtracts l from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("BE", "cp (hl)", 1, new int[] { 7 }, "Subtracts (hl) from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("BF", "cp a", 1, new int[] { 4 }, "Subtracts a from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("C0", "ret nz", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C1", "pop bc", 1, new int[] { 10 }, "The memory location pointed to by sp is stored into c and sp is incremented. The memory location pointed to by sp is stored into b and sp is incremented again.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C2", "jp nz,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C3", "jp **", 3, new int[] { 10 }, "** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C4", "call nz,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C5", "push bc", 1, new int[] { 11 }, "sp is decremented and b is stored into the memory location pointed to by sp. sp is decremented again and c is stored into the memory location pointed to by sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C6", "add a,*", 2, new int[] { 7 }, "Adds * to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("C7", "rst 00h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 00h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C8", "ret z", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("C9", "ret", 1, new int[] { 10 }, "The top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CA", "jp z,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CC", "call z,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CD", "call **", 3, new int[] { 17 }, "The current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CE", "adc a,*", 2, new int[] { 7 }, "Adds * and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CF", "rst 08h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 08h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D0", "ret nc", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D1", "pop de", 1, new int[] { 10 }, "The memory location pointed to by sp is stored into e and sp is incremented. The memory location pointed to by sp is stored into d and sp is incremented again.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D2", "jp nc,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D3", "out (*),a", 2, new int[] { 11 }, "The value of a is written to port *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D4", "call nc,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D5", "push de", 1, new int[] { 11 }, "sp is decremented and d is stored into the memory location pointed to by sp. sp is decremented again and e is stored into the memory location pointed to by sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D6", "sub *", 2, new int[] { 7 }, "Subtracts * from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("D7", "rst 10h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 10h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D8", "ret c", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("D9", "exx", 1, new int[] { 4 }, "Exchanges the 16-bit contents of bc, de, and hl with bc', de', and hl'.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DA", "jp c,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DB", "in a,(*)", 2, new int[] { 11 }, "A byte from port * is written to a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DC", "call c,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DE", "sbc a,*", 2, new int[] { 7 }, "Subtracts * and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DF", "rst 18h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 18h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E0", "ret po", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E1", "pop hl", 1, new int[] { 10 }, "The memory location pointed to by sp is stored into l and sp is incremented. The memory location pointed to by sp is stored into h and sp is incremented again.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E2", "jp po,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E3", "ex (sp),hl", 1, new int[] { 19 }, "Exchanges (sp) with l, and (sp+1) with h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E4", "call po,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E5", "push hl", 1, new int[] { 11 }, "sp is decremented and h is stored into the memory location pointed to by sp. sp is decremented again and l is stored into the memory location pointed to by sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E6", "and *", 2, new int[] { 7 }, "Bitwise AND on a with *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("E7", "rst 20h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 20h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E8", "ret pe", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("E9", "jp (hl)", 1, new int[] { 4 }, "Loads the value of hl into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EA", "jp pe,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EB", "ex de,hl", 1, new int[] { 4 }, "Exchanges the 16-bit contents of de and hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EC", "call pe,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EE", "xor *", 2, new int[] { 7 }, "Bitwise XOR on a with *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("EF", "rst 28h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 28h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F0", "ret p", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F1", "pop af", 1, new int[] { 10 }, "The memory location pointed to by sp is stored into f and sp is incremented. The memory location pointed to by sp is stored into a and sp is incremented again.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F2", "jp p,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F3", "di", 1, new int[] { 4 }, "Resets both interrupt flip-flops, thus prenting maskable interrupts from triggering.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F4", "call p,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F5", "push af", 1, new int[] { 11 }, "sp is decremented and a is stored into the memory location pointed to by sp. sp is decremented again and f is stored into the memory location pointed to by sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F6", "or *", 2, new int[] { 7 }, "Bitwise OR on a with *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("F7", "rst 30h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 30h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F8", "ret m", 1, new int[] { 11, 5 }, "If condition cc is true, the top stack entry is popped into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("F9", "ld sp,hl", 1, new int[] { 6 }, "Loads the value of hl into sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FA", "jp m,**", 3, new int[] { 10 }, "If condition cc is true, ** is copied to pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FB", "ei", 1, new int[] { 4 }, "Sets both interrupt flip-flops, thus allowing maskable interrupts to occur. An interrupt will not occur until after the immediatedly following instruction.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FC", "call m,**", 3, new int[] { 17, 10 }, "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FE", "cp *", 2, new int[] { 7 }, "Subtracts * from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FF", "rst 38h", 1, new int[] { 11 }, "The current pc value plus one is pushed onto the stack, then is loaded with 38h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED23", "swapnib", 2, new int[] { 8 }, "Upper and lower 4 bits (nibbles) of a are swapped. (4-letter: swap)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED24", "mirror a", 2, new int[] { 8 }, "Bits in a are reversed. (4-letter: mirr)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED27", "test *", 3, new int[] { 11 }, "Affects flags same way as bitwise AND on a with *, but a is not modified.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, true),
            new Z80Node("ED28", "bsla de,b", 2, new int[] { 8 }, "The contents of de are shifted left (b&31) bits positions, zeroing vacant lower bits.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED29", "bsra de,b", 2, new int[] { 8 }, "The contents of de are shifted right (b&31) bits positions, copying de bit 15 into vacant top bits.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED2A", "bsrl de,b", 2, new int[] { 8 }, "The contents of de are shifted right (b&31) bits positions, zeroing vacant top bits.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED2B", "bsrf de,b", 2, new int[] { 8 }, "The contents of de are shifted right (b&31) bits positions, setting to one vacant top bits.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED2C", "brlc de,b", 2, new int[] { 8 }, "The contents of de are rotated left (b&15) bits positions. To get rotation \"right\" use negative b (or b=16-value).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED30", "mul d,e", 2, new int[] { 8 }, "Unsigned multiply of d by e, the 16 bit result is stored into de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED31", "add hl,a", 2, new int[] { 8 }, "The unsigned value of a (zero-extended to 16 bits) is added to hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED32", "add de,a", 2, new int[] { 8 }, "The unsigned value of a (zero-extended to 16 bits) is added to de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED33", "add bc,a", 2, new int[] { 8 }, "The unsigned value of a (zero-extended to 16 bits) is added to bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED34", "add hl,**", 4, new int[] { 16 }, "The value ** is added to hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED35", "add de,**", 4, new int[] { 16 }, "The value ** is added to de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED36", "add bc,**", 4, new int[] { 16 }, "The value ** is added to bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED40", "in b,(c)", 2, new int[] { 12 }, "A byte from port bc is written to b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED41", "out (c),b", 2, new int[] { 12 }, "The value of b is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED42", "sbc hl,bc", 2, new int[] { 15 }, "Subtracts bc and the carry flag from hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED43", "ld (**),bc", 4, new int[] { 20 }, "Stores bc into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED44", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED45", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED46", "im 0", 2, new int[] { 8 }, "Sets interrupt mode 0.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED47", "ld i,a", 2, new int[] { 9 }, "Stores the value of a into register i or r.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED48", "in c,(c)", 2, new int[] { 12 }, "A byte from port bc is written to c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED49", "out (c),c", 2, new int[] { 12 }, "The value of c is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED4A", "adc hl,bc", 2, new int[] { 15 }, "Adds bc and the carry flag to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED4B", "ld bc,(**)", 4, new int[] { 20 }, "Loads the value pointed to by ** into bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED4C", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED4D", "reti", 2, new int[] { 14 }, "Used at the end of a maskable interrupt service routine. The top stack entry is popped into pc, and signals an I/O device that the interrupt has finished, allowing nested interrupts (not a consideration on the TI).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED4E", "im 0/1", 2, new int[] { 8 }, "Sets undefined interrupt mode 0/1.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("ED4F", "ld r,a", 2, new int[] { 9 }, "Stores the value of a into register i or r.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED50", "in d,(c)", 2, new int[] { 12 }, "A byte from port bc is written to d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED51", "out (c),d", 2, new int[] { 12 }, "The value of d is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED52", "sbc hl,de", 2, new int[] { 15 }, "Subtracts de and the carry flag from hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED53", "ld (**),de", 4, new int[] { 20 }, "Stores de into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED54", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED55", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED56", "im 1", 2, new int[] { 8 }, "Sets interrupt mode 1.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED57", "ld a,i", 2, new int[] { 9 }, "Stores the value of register i or r into a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Exceptional, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED58", "in e,(c)", 2, new int[] { 12 }, "A byte from port bc is written to e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED59", "out (c),e", 2, new int[] { 12 }, "The value of e is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED5A", "adc hl,de", 2, new int[] { 15 }, "Adds de and the carry flag to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED5B", "ld de,(**)", 4, new int[] { 20 }, "Loads the value pointed to by ** into de.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED5C", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED5D", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED5E", "im 2", 2, new int[] { 8 }, "Sets interrupt mode 2.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED5F", "ld a,r", 2, new int[] { 9 }, "Stores the value of register i or r into a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Exceptional, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED60", "in h,(c)", 2, new int[] { 12 }, "A byte from port bc is written to h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED61", "out (c),h", 2, new int[] { 12 }, "The value of h is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED62", "sbc hl,hl", 2, new int[] { 15 }, "Subtracts hl and the carry flag from hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED63", "ld (**),hl", 4, new int[] { 20 }, "Stores hl into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("ED64", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED65", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED66", "im 0", 2, new int[] { 8 }, "Sets interrupt mode 0.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED67", "rrd", 2, new int[] { 18 }, "The contents of the low-order nibble of (hl) are copied to the low-order nibble of a. The previous contents are copied to the high-order nibble of (hl). The previous contents are copied to the low-order nibble of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED68", "in l,(c)", 2, new int[] { 12 }, "A byte from port bc is written to l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED69", "out (c),l", 2, new int[] { 12 }, "The value of l is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED6A", "adc hl,hl", 2, new int[] { 15 }, "Adds hl and the carry flag to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED6B", "ld hl,(**)", 4, new int[] { 20 }, "Loads the value pointed to by ** into hl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("ED6C", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED6D", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED6E", "im 0/1", 2, new int[] { 8 }, "Sets undefined interrupt mode 0/1.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("ED6F", "rld", 2, new int[] { 18 }, "The contents of the low-order nibble of (hl) are copied to the high-order nibble of (hl). The previous contents are copied to the low-order nibble of a. The previous contents are copied to the low-order nibble of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED70", "in (c)", 2, new int[] { 12 }, "Inputs a byte from port bc and affects flags only.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED71", "out (c),0", 2, new int[] { 12 }, "Outputs a zero (or 0xFF with some Z80 chips) to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("ED72", "sbc hl,sp", 2, new int[] { 15 }, "Subtracts hl and the carry flag from hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED73", "ld (**),sp", 4, new int[] { 20 }, "Stores sp into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED74", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED75", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED76", "im 1", 2, new int[] { 8 }, "Sets interrupt mode 1.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED78", "in a,(c)", 2, new int[] { 12 }, "A byte from port bc is written to a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED79", "out (c),a", 2, new int[] { 12 }, "The value of a is written to port bc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED7A", "adc hl,sp", 2, new int[] { 15 }, "Adds hl and the carry flag to hl.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("ED7B", "ld sp,(**)", 4, new int[] { 20 }, "Loads the value pointed to by ** into sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED7C", "neg", 2, new int[] { 8 }, "The contents of a are negated (two's complement). Operation is the same as subtracting a from zero.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("ED7D", "retn", 2, new int[] { 14 }, "Used at the end of a non-maskable interrupt service routine (located at $0066) to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED7E", "im 2", 2, new int[] { 8 }, "Sets interrupt mode 2.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("ED8A", "push **", 4, new int[] { 23 }, "sp is decremented and first byte of value ** is stored into the memory location pointed to by sp. sp is decremented again and second byte of value ** is stored into the memory location pointed to by sp. The value ** is thus encoded in instruction in big-endian way, opposite to all other instructions using 16 bit immediates.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED90", "outinb", 2, new int[] { 16 }, "A byte from the memory location pointed to by hl is written to port bc. Then hl is incremented (b is not modified). (4-letter: otib)", new FlagType[] { FlagType.Unknown, FlagType.Unknown, FlagType.Unknown, FlagType.Unknown, FlagType.Unknown, FlagType.Unknown }, false, true),
            new Z80Node("ED91", "nextreg *,*", 4, new int[] { 20 }, "Writes second value * into next-register specified by first * value (not affecting next-register selected at I/O port 243Bh). (4-letter: nreg)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED92", "nextreg *,a", 3, new int[] { 17 }, "Writes a into next-register specified by * value (not affecting next-register selected at I/O port 243Bh). (4-letter: nreg)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED93", "pixeldn", 2, new int[] { 8 }, "Updates value in hl to \"move it by one line down\" in ZX Spectrum ULA-screen lines addressing scheme. (hl = 0x07!=(h&0x07) ? hl+0x100 : 0xE0!=(l&0xE0) ? (hl&0xF8FF)+0x20 : (hl&0xF81F)+0x800) (4-letter: pxdn)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED94", "pixelad", 2, new int[] { 8 }, "Calculates into hl ZX Spectrum ULA-screen address of pixel at coordinates [x:e,y:d] (result is undefined for d>=192). (hl = 0x4000 + ((d&0xC0)<<5) + ((d&0x07)<<8) + ((d&0x38)<<2) + (e>>3)) (4-letter: pxad)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED95", "setae", 2, new int[] { 8 }, "Low 3 bits of e are used to identify target bit (from highest(!) to lowest), then a is cleared with only target bit set (a = 0x80>>(e&7)). This works as pixel mask in ULA-screen for e representing x coordinate. (4-letter: stae)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("ED98", "jp (c)", 2, new int[] { 13 }, "Reads value from port bc, multiplies it by 64 and replaces bottom 14 bits of pc with the result (the pc points already beyond `jp (c)` when bits are replaced). pc = (pc&0xC000) + (in (c)<<6)", new FlagType[] { FlagType.Unknown, FlagType.Unknown, FlagType.Unknown, FlagType.Unknown, FlagType.Unknown, FlagType.Unknown }, false, true),
            new Z80Node("EDA0", "ldi", 2, new int[] { 16 }, "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl and de are incremented and bc is decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Exceptional, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EDA1", "cpi", 2, new int[] { 16 }, "Compares the value of the memory location pointed to by hl with a. Then hl is incremented and bc is decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Exceptional, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("EDA2", "ini", 2, new int[] { 16 }, "A byte from port bc is written to the memory location pointed to by hl. Then hl is incremented and b is decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Exceptional, FlagType.Unknown }, false, false),
            new Z80Node("EDA3", "outi", 2, new int[] { 16 }, "b is decremented (sets zero flag if zero is reached). Then a byte from the memory location pointed to by hl is written to port bc. Then hl is incremented.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Exceptional, FlagType.Unknown }, false, false),
            new Z80Node("EDA4", "ldix", 2, new int[] { 16 }, "If the byte value from the memory at location hl differs from a, writes the byte to the memory location pointed to by de. The hl and de are incremented and bc is decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("EDA5", "ldws", 2, new int[] { 14 }, "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then only l and only d are incremented. Resulting flags are identical to `inc d` instruction.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, true),
            new Z80Node("EDA8", "ldd", 2, new int[] { 16 }, "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl, de, and bc are decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Exceptional, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EDA9", "cpd", 2, new int[] { 16 }, "Compares the value of the memory location pointed to by hl with a. Then hl and bc are decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Exceptional, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("EDAA", "ind", 2, new int[] { 16 }, "A byte from port bc is written to the memory location pointed to by hl. Then hl and b are decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Exceptional, FlagType.Unknown }, false, false),
            new Z80Node("EDAB", "outd", 2, new int[] { 16 }, "b is decremented (sets zero flag if zero is reached). Then a byte from the memory location pointed to by hl is written to port bc. Then hl is decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Exceptional, FlagType.Unknown }, false, false),
            new Z80Node("EDAC", "lddx", 2, new int[] { 16 }, "If the byte value from the memory at location hl differs from a, writes the byte to the memory location pointed to by de. The de is incremented, hl and bc are decremented.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("EDB0", "ldir", 2, new int[] { 21, 16 }, "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl and de are incremented and bc is decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Reset, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EDB1", "cpir", 2, new int[] { 21, 16 }, "Compares the value of the memory location pointed to by hl with a. Then hl is incremented and bc is decremented. If bc is not zero and z is not set, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("EDB2", "inir", 2, new int[] { 21, 16 }, "A byte from port bc is written to the memory location pointed to by hl. Then hl is incremented and b is decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Set, FlagType.Unknown }, false, false),
            new Z80Node("EDB3", "otir", 2, new int[] { 21, 16 }, "b is decremented. Then a byte from the memory location pointed to by hl is written to port bc. Then hl is incremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Set, FlagType.Unknown }, false, false),
            new Z80Node("EDB4", "ldirx", 2, new int[] { 21, 16 }, "If the byte value from the memory at location hl differs from a, writes the byte to the memory location pointed to by de. The hl and de are incremented and bc is decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing. (4-letter: lirx)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("EDB7", "ldpirx", 2, new int[] { 21, 16 }, "The source address is calculated as (hl&0xFFF8)+(e&0x07). If the byte value from the memory at source location differs from a, writes the byte to the memory location pointed to by de. The de is incremented and bc is decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing. (4-letter: lprx)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("EDB8", "lddr", 2, new int[] { 21, 16 }, "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl, de, and bc are decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Reset, FlagType.Reset, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("EDB9", "cpdr", 2, new int[] { 21, 16 }, "Compares the value of the memory location pointed to by hl with a. Then hl and bc are decremented. If bc is not zero and z is not set, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("EDBA", "indr", 2, new int[] { 21, 16 }, "A byte from port bc is written to the memory location pointed to by hl. Then hl and b are decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Set, FlagType.Unknown }, false, false),
            new Z80Node("EDBB", "otdr", 2, new int[] { 21, 16 }, "b is decremented. Then a byte from the memory location pointed to by hl is written to port bc. Then hl is decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.Unknown, FlagType.Unknown, FlagType.Set, FlagType.Unknown }, false, false),
            new Z80Node("EDBC", "lddrx", 2, new int[] { 21, 16 }, "If the byte value from the memory at location hl differs from a, writes the byte to the memory location pointed to by de. The de is incremented, hl and bc are decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing. (4-letter: ldrx)", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, true),
            new Z80Node("CB00", "rlc b", 2, new int[] { 8 }, "The contents of b are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB01", "rlc c", 2, new int[] { 8 }, "The contents of c are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB02", "rlc d", 2, new int[] { 8 }, "The contents of d are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB03", "rlc e", 2, new int[] { 8 }, "The contents of e are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB04", "rlc h", 2, new int[] { 8 }, "The contents of h are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB05", "rlc l", 2, new int[] { 8 }, "The contents of l are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB06", "rlc (hl)", 2, new int[] { 15 }, "The contents of (hl) are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB07", "rlc a", 2, new int[] { 8 }, "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB08", "rrc b", 2, new int[] { 8 }, "The contents of b are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB09", "rrc c", 2, new int[] { 8 }, "The contents of c are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB0A", "rrc d", 2, new int[] { 8 }, "The contents of d are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB0B", "rrc e", 2, new int[] { 8 }, "The contents of e are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB0C", "rrc h", 2, new int[] { 8 }, "The contents of h are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB0D", "rrc l", 2, new int[] { 8 }, "The contents of l are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB0E", "rrc (hl)", 2, new int[] { 15 }, "The contents of (hl) are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB0F", "rrc a", 2, new int[] { 8 }, "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB10", "rl b", 2, new int[] { 8 }, "The contents of b are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB11", "rl c", 2, new int[] { 8 }, "The contents of c are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB12", "rl d", 2, new int[] { 8 }, "The contents of d are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB13", "rl e", 2, new int[] { 8 }, "The contents of e are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB14", "rl h", 2, new int[] { 8 }, "The contents of h are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB15", "rl l", 2, new int[] { 8 }, "The contents of l are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB16", "rl (hl)", 2, new int[] { 15 }, "The contents of (hl) are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB17", "rl a", 2, new int[] { 8 }, "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB18", "rr b", 2, new int[] { 8 }, "The contents of b are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB19", "rr c", 2, new int[] { 8 }, "The contents of c are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB1A", "rr d", 2, new int[] { 8 }, "The contents of d are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB1B", "rr e", 2, new int[] { 8 }, "The contents of e are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB1C", "rr h", 2, new int[] { 8 }, "The contents of h are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB1D", "rr l", 2, new int[] { 8 }, "The contents of l are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB1E", "rr (hl)", 2, new int[] { 15 }, "The contents of (hl) are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB1F", "rr a", 2, new int[] { 8 }, "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB20", "sla b", 2, new int[] { 8 }, "The contents of b are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB21", "sla c", 2, new int[] { 8 }, "The contents of c are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB22", "sla d", 2, new int[] { 8 }, "The contents of d are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB23", "sla e", 2, new int[] { 8 }, "The contents of e are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB24", "sla h", 2, new int[] { 8 }, "The contents of h are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB25", "sla l", 2, new int[] { 8 }, "The contents of l are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB26", "sla (hl)", 2, new int[] { 15 }, "The contents of (hl) are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB27", "sla a", 2, new int[] { 8 }, "The contents of a are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB28", "sra b", 2, new int[] { 8 }, "The contents of b are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB29", "sra c", 2, new int[] { 8 }, "The contents of c are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB2A", "sra d", 2, new int[] { 8 }, "The contents of d are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB2B", "sra e", 2, new int[] { 8 }, "The contents of e are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB2C", "sra h", 2, new int[] { 8 }, "The contents of h are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB2D", "sra l", 2, new int[] { 8 }, "The contents of l are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB2E", "sra (hl)", 2, new int[] { 15 }, "The contents of (hl) are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB2F", "sra a", 2, new int[] { 8 }, "The contents of a are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB30", "sll b", 2, new int[] { 8 }, "The contents of b are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB31", "sll c", 2, new int[] { 8 }, "The contents of c are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB32", "sll d", 2, new int[] { 8 }, "The contents of d are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB33", "sll e", 2, new int[] { 8 }, "The contents of e are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB34", "sll h", 2, new int[] { 8 }, "The contents of h are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB35", "sll l", 2, new int[] { 8 }, "The contents of l are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB36", "sll (hl)", 2, new int[] { 15 }, "The contents of (hl) are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB37", "sll a", 2, new int[] { 8 }, "The contents of a are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("CB38", "srl b", 2, new int[] { 8 }, "The contents of b are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB39", "srl c", 2, new int[] { 8 }, "The contents of c are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB3A", "srl d", 2, new int[] { 8 }, "The contents of d are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB3B", "srl e", 2, new int[] { 8 }, "The contents of e are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB3C", "srl h", 2, new int[] { 8 }, "The contents of h are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB3D", "srl l", 2, new int[] { 8 }, "The contents of l are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB3E", "srl (hl)", 2, new int[] { 15 }, "The contents of (hl) are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB3F", "srl a", 2, new int[] { 8 }, "The contents of a are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("CB40", "bit 0,b", 2, new int[] { 8 }, "Tests bit 0 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB41", "bit 0,c", 2, new int[] { 8 }, "Tests bit 0 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB42", "bit 0,d", 2, new int[] { 8 }, "Tests bit 0 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB43", "bit 0,e", 2, new int[] { 8 }, "Tests bit 0 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB44", "bit 0,h", 2, new int[] { 8 }, "Tests bit 0 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB45", "bit 0,l", 2, new int[] { 8 }, "Tests bit 0 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB46", "bit 0,(hl)", 2, new int[] { 12 }, "Tests bit 0 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB47", "bit 0,a", 2, new int[] { 8 }, "Tests bit 0 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB48", "bit 1,b", 2, new int[] { 8 }, "Tests bit 1 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB49", "bit 1,c", 2, new int[] { 8 }, "Tests bit 1 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB4A", "bit 1,d", 2, new int[] { 8 }, "Tests bit 1 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB4B", "bit 1,e", 2, new int[] { 8 }, "Tests bit 1 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB4C", "bit 1,h", 2, new int[] { 8 }, "Tests bit 1 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB4D", "bit 1,l", 2, new int[] { 8 }, "Tests bit 1 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB4E", "bit 1,(hl)", 2, new int[] { 12 }, "Tests bit 1 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB4F", "bit 1,a", 2, new int[] { 8 }, "Tests bit 1 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB50", "bit 2,b", 2, new int[] { 8 }, "Tests bit 2 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB51", "bit 2,c", 2, new int[] { 8 }, "Tests bit 2 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB52", "bit 2,d", 2, new int[] { 8 }, "Tests bit 2 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB53", "bit 2,e", 2, new int[] { 8 }, "Tests bit 2 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB54", "bit 2,h", 2, new int[] { 8 }, "Tests bit 2 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB55", "bit 2,l", 2, new int[] { 8 }, "Tests bit 2 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB56", "bit 2,(hl)", 2, new int[] { 12 }, "Tests bit 2 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB57", "bit 2,a", 2, new int[] { 8 }, "Tests bit 2 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB58", "bit 3,b", 2, new int[] { 8 }, "Tests bit 3 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB59", "bit 3,c", 2, new int[] { 8 }, "Tests bit 3 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB5A", "bit 3,d", 2, new int[] { 8 }, "Tests bit 3 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB5B", "bit 3,e", 2, new int[] { 8 }, "Tests bit 3 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB5C", "bit 3,h", 2, new int[] { 8 }, "Tests bit 3 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB5D", "bit 3,l", 2, new int[] { 8 }, "Tests bit 3 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB5E", "bit 3,(hl)", 2, new int[] { 12 }, "Tests bit 3 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB5F", "bit 3,a", 2, new int[] { 8 }, "Tests bit 3 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB60", "bit 4,b", 2, new int[] { 8 }, "Tests bit 4 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB61", "bit 4,c", 2, new int[] { 8 }, "Tests bit 4 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB62", "bit 4,d", 2, new int[] { 8 }, "Tests bit 4 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB63", "bit 4,e", 2, new int[] { 8 }, "Tests bit 4 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB64", "bit 4,h", 2, new int[] { 8 }, "Tests bit 4 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB65", "bit 4,l", 2, new int[] { 8 }, "Tests bit 4 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB66", "bit 4,(hl)", 2, new int[] { 12 }, "Tests bit 4 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB67", "bit 4,a", 2, new int[] { 8 }, "Tests bit 4 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB68", "bit 5,b", 2, new int[] { 8 }, "Tests bit 5 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB69", "bit 5,c", 2, new int[] { 8 }, "Tests bit 5 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB6A", "bit 5,d", 2, new int[] { 8 }, "Tests bit 5 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB6B", "bit 5,e", 2, new int[] { 8 }, "Tests bit 5 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB6C", "bit 5,h", 2, new int[] { 8 }, "Tests bit 5 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB6D", "bit 5,l", 2, new int[] { 8 }, "Tests bit 5 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB6E", "bit 5,(hl)", 2, new int[] { 12 }, "Tests bit 5 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB6F", "bit 5,a", 2, new int[] { 8 }, "Tests bit 5 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB70", "bit 6,b", 2, new int[] { 8 }, "Tests bit 6 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB71", "bit 6,c", 2, new int[] { 8 }, "Tests bit 6 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB72", "bit 6,d", 2, new int[] { 8 }, "Tests bit 6 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB73", "bit 6,e", 2, new int[] { 8 }, "Tests bit 6 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB74", "bit 6,h", 2, new int[] { 8 }, "Tests bit 6 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB75", "bit 6,l", 2, new int[] { 8 }, "Tests bit 6 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB76", "bit 6,(hl)", 2, new int[] { 12 }, "Tests bit 6 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB77", "bit 6,a", 2, new int[] { 8 }, "Tests bit 6 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB78", "bit 7,b", 2, new int[] { 8 }, "Tests bit 7 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB79", "bit 7,c", 2, new int[] { 8 }, "Tests bit 7 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB7A", "bit 7,d", 2, new int[] { 8 }, "Tests bit 7 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB7B", "bit 7,e", 2, new int[] { 8 }, "Tests bit 7 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB7C", "bit 7,h", 2, new int[] { 8 }, "Tests bit 7 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB7D", "bit 7,l", 2, new int[] { 8 }, "Tests bit 7 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB7E", "bit 7,(hl)", 2, new int[] { 12 }, "Tests bit 7 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB7F", "bit 7,a", 2, new int[] { 8 }, "Tests bit 7 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("CB80", "res 0,b", 2, new int[] { 8 }, "Resets bit 0 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB81", "res 0,c", 2, new int[] { 8 }, "Resets bit 0 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB82", "res 0,d", 2, new int[] { 8 }, "Resets bit 0 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB83", "res 0,e", 2, new int[] { 8 }, "Resets bit 0 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB84", "res 0,h", 2, new int[] { 8 }, "Resets bit 0 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB85", "res 0,l", 2, new int[] { 8 }, "Resets bit 0 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB86", "res 0,(hl)", 2, new int[] { 15 }, "Resets bit 0 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB87", "res 0,a", 2, new int[] { 8 }, "Resets bit 0 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB88", "res 1,b", 2, new int[] { 8 }, "Resets bit 1 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB89", "res 1,c", 2, new int[] { 8 }, "Resets bit 1 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB8A", "res 1,d", 2, new int[] { 8 }, "Resets bit 1 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB8B", "res 1,e", 2, new int[] { 8 }, "Resets bit 1 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB8C", "res 1,h", 2, new int[] { 8 }, "Resets bit 1 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB8D", "res 1,l", 2, new int[] { 8 }, "Resets bit 1 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB8E", "res 1,(hl)", 2, new int[] { 15 }, "Resets bit 1 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB8F", "res 1,a", 2, new int[] { 8 }, "Resets bit 1 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB90", "res 2,b", 2, new int[] { 8 }, "Resets bit 2 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB91", "res 2,c", 2, new int[] { 8 }, "Resets bit 2 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB92", "res 2,d", 2, new int[] { 8 }, "Resets bit 2 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB93", "res 2,e", 2, new int[] { 8 }, "Resets bit 2 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB94", "res 2,h", 2, new int[] { 8 }, "Resets bit 2 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB95", "res 2,l", 2, new int[] { 8 }, "Resets bit 2 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB96", "res 2,(hl)", 2, new int[] { 15 }, "Resets bit 2 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB97", "res 2,a", 2, new int[] { 8 }, "Resets bit 2 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB98", "res 3,b", 2, new int[] { 8 }, "Resets bit 3 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB99", "res 3,c", 2, new int[] { 8 }, "Resets bit 3 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB9A", "res 3,d", 2, new int[] { 8 }, "Resets bit 3 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB9B", "res 3,e", 2, new int[] { 8 }, "Resets bit 3 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB9C", "res 3,h", 2, new int[] { 8 }, "Resets bit 3 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB9D", "res 3,l", 2, new int[] { 8 }, "Resets bit 3 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB9E", "res 3,(hl)", 2, new int[] { 15 }, "Resets bit 3 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CB9F", "res 3,a", 2, new int[] { 8 }, "Resets bit 3 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA0", "res 4,b", 2, new int[] { 8 }, "Resets bit 4 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA1", "res 4,c", 2, new int[] { 8 }, "Resets bit 4 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA2", "res 4,d", 2, new int[] { 8 }, "Resets bit 4 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA3", "res 4,e", 2, new int[] { 8 }, "Resets bit 4 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA4", "res 4,h", 2, new int[] { 8 }, "Resets bit 4 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA5", "res 4,l", 2, new int[] { 8 }, "Resets bit 4 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA6", "res 4,(hl)", 2, new int[] { 15 }, "Resets bit 4 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA7", "res 4,a", 2, new int[] { 8 }, "Resets bit 4 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA8", "res 5,b", 2, new int[] { 8 }, "Resets bit 5 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBA9", "res 5,c", 2, new int[] { 8 }, "Resets bit 5 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBAA", "res 5,d", 2, new int[] { 8 }, "Resets bit 5 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBAB", "res 5,e", 2, new int[] { 8 }, "Resets bit 5 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBAC", "res 5,h", 2, new int[] { 8 }, "Resets bit 5 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBAD", "res 5,l", 2, new int[] { 8 }, "Resets bit 5 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBAE", "res 5,(hl)", 2, new int[] { 15 }, "Resets bit 5 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBAF", "res 5,a", 2, new int[] { 8 }, "Resets bit 5 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB0", "res 6,b", 2, new int[] { 8 }, "Resets bit 6 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB1", "res 6,c", 2, new int[] { 8 }, "Resets bit 6 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB2", "res 6,d", 2, new int[] { 8 }, "Resets bit 6 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB3", "res 6,e", 2, new int[] { 8 }, "Resets bit 6 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB4", "res 6,h", 2, new int[] { 8 }, "Resets bit 6 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB5", "res 6,l", 2, new int[] { 8 }, "Resets bit 6 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB6", "res 6,(hl)", 2, new int[] { 15 }, "Resets bit 6 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB7", "res 6,a", 2, new int[] { 8 }, "Resets bit 6 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB8", "res 7,b", 2, new int[] { 8 }, "Resets bit 7 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBB9", "res 7,c", 2, new int[] { 8 }, "Resets bit 7 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBBA", "res 7,d", 2, new int[] { 8 }, "Resets bit 7 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBBB", "res 7,e", 2, new int[] { 8 }, "Resets bit 7 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBBC", "res 7,h", 2, new int[] { 8 }, "Resets bit 7 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBBD", "res 7,l", 2, new int[] { 8 }, "Resets bit 7 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBBE", "res 7,(hl)", 2, new int[] { 15 }, "Resets bit 7 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBBF", "res 7,a", 2, new int[] { 8 }, "Resets bit 7 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC0", "set 0,b", 2, new int[] { 8 }, "Sets bit 0 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC1", "set 0,c", 2, new int[] { 8 }, "Sets bit 0 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC2", "set 0,d", 2, new int[] { 8 }, "Sets bit 0 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC3", "set 0,e", 2, new int[] { 8 }, "Sets bit 0 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC4", "set 0,h", 2, new int[] { 8 }, "Sets bit 0 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC5", "set 0,l", 2, new int[] { 8 }, "Sets bit 0 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC6", "set 0,(hl)", 2, new int[] { 15 }, "Sets bit 0 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC7", "set 0,a", 2, new int[] { 8 }, "Sets bit 0 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC8", "set 1,b", 2, new int[] { 8 }, "Sets bit 1 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBC9", "set 1,c", 2, new int[] { 8 }, "Sets bit 1 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBCA", "set 1,d", 2, new int[] { 8 }, "Sets bit 1 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBCB", "set 1,e", 2, new int[] { 8 }, "Sets bit 1 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBCC", "set 1,h", 2, new int[] { 8 }, "Sets bit 1 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBCD", "set 1,l", 2, new int[] { 8 }, "Sets bit 1 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBCE", "set 1,(hl)", 2, new int[] { 15 }, "Sets bit 1 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBCF", "set 1,a", 2, new int[] { 8 }, "Sets bit 1 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD0", "set 2,b", 2, new int[] { 8 }, "Sets bit 2 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD1", "set 2,c", 2, new int[] { 8 }, "Sets bit 2 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD2", "set 2,d", 2, new int[] { 8 }, "Sets bit 2 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD3", "set 2,e", 2, new int[] { 8 }, "Sets bit 2 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD4", "set 2,h", 2, new int[] { 8 }, "Sets bit 2 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD5", "set 2,l", 2, new int[] { 8 }, "Sets bit 2 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD6", "set 2,(hl)", 2, new int[] { 15 }, "Sets bit 2 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD7", "set 2,a", 2, new int[] { 8 }, "Sets bit 2 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD8", "set 3,b", 2, new int[] { 8 }, "Sets bit 3 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBD9", "set 3,c", 2, new int[] { 8 }, "Sets bit 3 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBDA", "set 3,d", 2, new int[] { 8 }, "Sets bit 3 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBDB", "set 3,e", 2, new int[] { 8 }, "Sets bit 3 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBDC", "set 3,h", 2, new int[] { 8 }, "Sets bit 3 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBDD", "set 3,l", 2, new int[] { 8 }, "Sets bit 3 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBDE", "set 3,(hl)", 2, new int[] { 15 }, "Sets bit 3 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBDF", "set 3,a", 2, new int[] { 8 }, "Sets bit 3 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE0", "set 4,b", 2, new int[] { 8 }, "Sets bit 4 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE1", "set 4,c", 2, new int[] { 8 }, "Sets bit 4 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE2", "set 4,d", 2, new int[] { 8 }, "Sets bit 4 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE3", "set 4,e", 2, new int[] { 8 }, "Sets bit 4 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE4", "set 4,h", 2, new int[] { 8 }, "Sets bit 4 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE5", "set 4,l", 2, new int[] { 8 }, "Sets bit 4 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE6", "set 4,(hl)", 2, new int[] { 15 }, "Sets bit 4 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE7", "set 4,a", 2, new int[] { 8 }, "Sets bit 4 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE8", "set 5,b", 2, new int[] { 8 }, "Sets bit 5 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBE9", "set 5,c", 2, new int[] { 8 }, "Sets bit 5 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBEA", "set 5,d", 2, new int[] { 8 }, "Sets bit 5 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBEB", "set 5,e", 2, new int[] { 8 }, "Sets bit 5 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBEC", "set 5,h", 2, new int[] { 8 }, "Sets bit 5 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBED", "set 5,l", 2, new int[] { 8 }, "Sets bit 5 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBEE", "set 5,(hl)", 2, new int[] { 15 }, "Sets bit 5 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBEF", "set 5,a", 2, new int[] { 8 }, "Sets bit 5 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF0", "set 6,b", 2, new int[] { 8 }, "Sets bit 6 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF1", "set 6,c", 2, new int[] { 8 }, "Sets bit 6 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF2", "set 6,d", 2, new int[] { 8 }, "Sets bit 6 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF3", "set 6,e", 2, new int[] { 8 }, "Sets bit 6 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF4", "set 6,h", 2, new int[] { 8 }, "Sets bit 6 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF5", "set 6,l", 2, new int[] { 8 }, "Sets bit 6 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF6", "set 6,(hl)", 2, new int[] { 15 }, "Sets bit 6 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF7", "set 6,a", 2, new int[] { 8 }, "Sets bit 6 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF8", "set 7,b", 2, new int[] { 8 }, "Sets bit 7 of b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBF9", "set 7,c", 2, new int[] { 8 }, "Sets bit 7 of c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBFA", "set 7,d", 2, new int[] { 8 }, "Sets bit 7 of d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBFB", "set 7,e", 2, new int[] { 8 }, "Sets bit 7 of e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBFC", "set 7,h", 2, new int[] { 8 }, "Sets bit 7 of h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBFD", "set 7,l", 2, new int[] { 8 }, "Sets bit 7 of l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBFE", "set 7,(hl)", 2, new int[] { 15 }, "Sets bit 7 of (hl).", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("CBFF", "set 7,a", 2, new int[] { 8 }, "Sets bit 7 of a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD09", "add ix,bc", 2, new int[] { 15 }, "The value of bc is added to ix.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD19", "add ix,de", 2, new int[] { 15 }, "The value of de is added to ix.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD21", "ld ix,**", 4, new int[] { 14 }, "Loads ** into register ix.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD22", "ld (**),ix", 4, new int[] { 20 }, "Stores ix into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD23", "inc ix", 2, new int[] { 10 }, "Adds one to ix.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD24", "inc ixh", 2, new int[] { 8 }, "Adds one to ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD25", "dec ixh", 2, new int[] { 8 }, "Subtracts one from ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD26", "ld ixh,*", 3, new int[] { 11 }, "Loads * into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD29", "add ix,ix", 2, new int[] { 15 }, "The value of ix is added to ix.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD2A", "ld ix,(**)", 4, new int[] { 20 }, "Loads the value pointed to by ** into ix.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD2B", "dec ix", 2, new int[] { 10 }, "Subtracts one from ix.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD2C", "inc ixl", 2, new int[] { 8 }, "Adds one to ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD2D", "dec ixl", 2, new int[] { 8 }, "Subtracts one from ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD2E", "ld ixl,*", 3, new int[] { 11 }, "Loads * into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD34", "inc (ix+*)", 3, new int[] { 23 }, "Adds one to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DD35", "dec (ix+*)", 3, new int[] { 23 }, "Subtracts one from the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DD36", "ld (ix+*),*", 4, new int[] { 19 }, "Stores * to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD39", "add ix,sp", 2, new int[] { 15 }, "The value of sp is added to ix.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD44", "ld b,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD45", "ld b,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD46", "ld b,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD4C", "ld c,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD4D", "ld c,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD4E", "ld c,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD54", "ld d,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD55", "ld d,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD56", "ld d,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD5C", "ld e,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD5D", "ld e,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD5E", "ld e,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD60", "ld ixh,b", 2, new int[] { 8 }, "The contents of b are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD61", "ld ixh,c", 2, new int[] { 8 }, "The contents of c are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD62", "ld ixh,d", 2, new int[] { 8 }, "The contents of d are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD63", "ld ixh,e", 2, new int[] { 8 }, "The contents of e are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD64", "ld ixh,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD65", "ld ixh,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD66", "ld h,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD67", "ld ixh,a", 2, new int[] { 8 }, "The contents of a are loaded into ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD68", "ld ixl,b", 2, new int[] { 8 }, "The contents of b are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD69", "ld ixl,c", 2, new int[] { 8 }, "The contents of c are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD6A", "ld ixl,d", 2, new int[] { 8 }, "The contents of d are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD6B", "ld ixl,e", 2, new int[] { 8 }, "The contents of e are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD6C", "ld ixl,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD6D", "ld ixl,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD6E", "ld l,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD6F", "ld ixl,a", 2, new int[] { 8 }, "The contents of a are loaded into ixl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD70", "ld (ix+*),b", 3, new int[] { 19 }, "Stores b to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD71", "ld (ix+*),c", 3, new int[] { 19 }, "Stores c to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD72", "ld (ix+*),d", 3, new int[] { 19 }, "Stores d to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD73", "ld (ix+*),e", 3, new int[] { 19 }, "Stores e to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD74", "ld (ix+*),h", 3, new int[] { 19 }, "Stores h to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD75", "ld (ix+*),l", 3, new int[] { 19 }, "Stores l to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD77", "ld (ix+*),a", 3, new int[] { 19 }, "Stores a to the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD7C", "ld a,ixh", 2, new int[] { 8 }, "The contents of ixh are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD7D", "ld a,ixl", 2, new int[] { 8 }, "The contents of ixl are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DD7E", "ld a,(ix+*)", 3, new int[] { 19 }, "Loads the value pointed to by ix plus * into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DD84", "add a,ixh", 2, new int[] { 8 }, "Adds ixh to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD85", "add a,ixl", 2, new int[] { 8 }, "Adds ixl to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD86", "add a,(ix+*)", 3, new int[] { 19 }, "Adds the value pointed to by ix plus * to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DD8C", "adc a,ixh", 2, new int[] { 8 }, "Adds ixh and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD8D", "adc a,ixl", 2, new int[] { 8 }, "Adds ixl and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD8E", "adc a,(ix+*)", 3, new int[] { 19 }, "Adds the value pointed to by ix plus * and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DD94", "sub ixh", 2, new int[] { 8 }, "Subtracts ixh from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD95", "sub ixl", 2, new int[] { 8 }, "Subtracts ixl from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD96", "sub (ix+*)", 3, new int[] { 19 }, "Subtracts the value pointed to by ix plus * from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DD9C", "sbc a,ixh", 2, new int[] { 8 }, "Subtracts ixh and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD9D", "sbc a,ixl", 2, new int[] { 8 }, "Subtracts ixl and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DD9E", "sbc a,(ix+*)", 3, new int[] { 19 }, "Subtracts the value pointed to by ix plus * and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDA4", "and ixh", 2, new int[] { 8 }, "Bitwise AND on a with ixh.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDA5", "and ixl", 2, new int[] { 8 }, "Bitwise AND on a with ixl.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDA6", "and (ix+*)", 3, new int[] { 19 }, "Bitwise AND on a with the value pointed to by ix plus *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDAC", "xor ixh", 2, new int[] { 8 }, "Bitwise XOR on a with ixh.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDAD", "xor ixl", 2, new int[] { 8 }, "Bitwise XOR on a with ixl.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDAE", "xor (ix+*)", 3, new int[] { 19 }, "Bitwise XOR on a with the value pointed to by ix plus *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDB4", "or ixh", 2, new int[] { 8 }, "Bitwise OR on a with ixh.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDB5", "or ixl", 2, new int[] { 8 }, "Bitwise OR on a with ixl.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDB6", "or (ix+*)", 3, new int[] { 19 }, "Bitwise OR on a with the value pointed to by ix plus *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDBC", "cp ixh", 2, new int[] { 8 }, "Subtracts ixh from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDBD", "cp ixl", 2, new int[] { 8 }, "Subtracts ixl from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDBE", "cp (ix+*)", 3, new int[] { 19 }, "Subtracts the value pointed to by ix plus * from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDE1", "pop ix", 2, new int[] { 14 }, "The memory location pointed to by sp is stored into ixl and sp is incremented. The memory location pointed to by sp is stored into ixh and sp is incremented again.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDE3", "ex (sp),ix", 2, new int[] { 23 }, "Exchanges (sp) with the ixl, and (sp+1) with the ixh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDE5", "push ix", 2, new int[] { 15 }, "sp is decremented and ixh is stored into the memory location pointed to by sp. sp is decremented again and ixl is stored into the memory location pointed to by sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDE9", "jp (ix)", 2, new int[] { 8 }, "Loads the value of ix into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDF9", "ld sp,ix", 2, new int[] { 10 }, "Loads the value of ix into sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**00", "rlc (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**01", "rlc (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**02", "rlc (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**03", "rlc (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**04", "rlc (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**05", "rlc (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**06", "rlc (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**07", "rlc (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**08", "rrc (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**09", "rrc (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**0A", "rrc (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**0B", "rrc (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**0C", "rrc (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**0D", "rrc (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**0E", "rrc (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**0F", "rrc (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**10", "rl (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**11", "rl (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**12", "rl (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**13", "rl (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**14", "rl (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**15", "rl (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**16", "rl (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**17", "rl (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**18", "rr (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**19", "rr (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**1A", "rr (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**1B", "rr (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**1C", "rr (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**1D", "rr (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**1E", "rr (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**1F", "rr (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**20", "sla (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**21", "sla (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**22", "sla (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**23", "sla (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**24", "sla (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**25", "sla (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**26", "sla (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**27", "sla (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**28", "sra (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**29", "sra (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**2A", "sra (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**2B", "sra (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**2C", "sra (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**2D", "sra (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**2E", "sra (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**2F", "sra (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**30", "sll (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**31", "sll (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**32", "sll (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**33", "sll (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**34", "sll (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**35", "sll (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**36", "sll (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**37", "sll (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**38", "srl (ix+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**39", "srl (ix+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**3A", "srl (ix+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**3B", "srl (ix+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**3C", "srl (ix+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**3D", "srl (ix+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**3E", "srl (ix+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("DDCB**3F", "srl (ix+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("DDCB**40", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**41", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**42", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**43", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**44", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**45", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**46", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**47", "bit 0,(ix+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**48", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**49", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**4A", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**4B", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**4C", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**4D", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**4E", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**4F", "bit 1,(ix+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**50", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**51", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**52", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**53", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**54", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**55", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**56", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**57", "bit 2,(ix+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**58", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**59", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**5A", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**5B", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**5C", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**5D", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**5E", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**5F", "bit 3,(ix+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**60", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**61", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**62", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**63", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**64", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**65", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**66", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**67", "bit 4,(ix+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**68", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**69", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**6A", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**6B", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**6C", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**6D", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**6E", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**6F", "bit 5,(ix+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**70", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**71", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**72", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**73", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**74", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**75", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**76", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**77", "bit 6,(ix+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**78", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**79", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**7A", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**7B", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**7C", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**7D", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**7E", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("DDCB**7F", "bit 7,(ix+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("DDCB**80", "res 0,(ix+*),b", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**81", "res 0,(ix+*),c", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**82", "res 0,(ix+*),d", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**83", "res 0,(ix+*),e", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**84", "res 0,(ix+*),h", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**85", "res 0,(ix+*),l", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**86", "res 0,(ix+*)", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**87", "res 0,(ix+*),a", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**88", "res 1,(ix+*),b", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**89", "res 1,(ix+*),c", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**8A", "res 1,(ix+*),d", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**8B", "res 1,(ix+*),e", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**8C", "res 1,(ix+*),h", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**8D", "res 1,(ix+*),l", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**8E", "res 1,(ix+*)", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**8F", "res 1,(ix+*),a", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**90", "res 2,(ix+*),b", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**91", "res 2,(ix+*),c", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**92", "res 2,(ix+*),d", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**93", "res 2,(ix+*),e", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**94", "res 2,(ix+*),h", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**95", "res 2,(ix+*),l", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**96", "res 2,(ix+*)", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**97", "res 2,(ix+*),a", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**98", "res 3,(ix+*),b", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**99", "res 3,(ix+*),c", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**9A", "res 3,(ix+*),d", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**9B", "res 3,(ix+*),e", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**9C", "res 3,(ix+*),h", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**9D", "res 3,(ix+*),l", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**9E", "res 3,(ix+*)", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**9F", "res 3,(ix+*),a", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A0", "res 4,(ix+*),b", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A1", "res 4,(ix+*),c", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A2", "res 4,(ix+*),d", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A3", "res 4,(ix+*),e", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A4", "res 4,(ix+*),h", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A5", "res 4,(ix+*),l", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A6", "res 4,(ix+*)", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**A7", "res 4,(ix+*),a", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A8", "res 5,(ix+*),b", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**A9", "res 5,(ix+*),c", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**AA", "res 5,(ix+*),d", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**AB", "res 5,(ix+*),e", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**AC", "res 5,(ix+*),h", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**AD", "res 5,(ix+*),l", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**AE", "res 5,(ix+*)", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**AF", "res 5,(ix+*),a", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B0", "res 6,(ix+*),b", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B1", "res 6,(ix+*),c", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B2", "res 6,(ix+*),d", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B3", "res 6,(ix+*),e", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B4", "res 6,(ix+*),h", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B5", "res 6,(ix+*),l", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B6", "res 6,(ix+*)", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**B7", "res 6,(ix+*),a", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B8", "res 7,(ix+*),b", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**B9", "res 7,(ix+*),c", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**BA", "res 7,(ix+*),d", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**BB", "res 7,(ix+*),e", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**BC", "res 7,(ix+*),h", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**BD", "res 7,(ix+*),l", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**BE", "res 7,(ix+*)", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**BF", "res 7,(ix+*),a", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C0", "set 0,(ix+*),b", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C1", "set 0,(ix+*),c", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C2", "set 0,(ix+*),d", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C3", "set 0,(ix+*),e", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C4", "set 0,(ix+*),h", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C5", "set 0,(ix+*),l", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C6", "set 0,(ix+*)", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**C7", "set 0,(ix+*),a", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C8", "set 1,(ix+*),b", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**C9", "set 1,(ix+*),c", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**CA", "set 1,(ix+*),d", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**CB", "set 1,(ix+*),e", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**CC", "set 1,(ix+*),h", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**CD", "set 1,(ix+*),l", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**CE", "set 1,(ix+*)", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**CF", "set 1,(ix+*),a", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D0", "set 2,(ix+*),b", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D1", "set 2,(ix+*),c", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D2", "set 2,(ix+*),d", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D3", "set 2,(ix+*),e", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D4", "set 2,(ix+*),h", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D5", "set 2,(ix+*),l", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D6", "set 2,(ix+*)", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**D7", "set 2,(ix+*),a", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D8", "set 3,(ix+*),b", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**D9", "set 3,(ix+*),c", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**DA", "set 3,(ix+*),d", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**DB", "set 3,(ix+*),e", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**DC", "set 3,(ix+*),h", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**DD", "set 3,(ix+*),l", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**DE", "set 3,(ix+*)", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**DF", "set 3,(ix+*),a", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E0", "set 4,(ix+*),b", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E1", "set 4,(ix+*),c", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E2", "set 4,(ix+*),d", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E3", "set 4,(ix+*),e", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E4", "set 4,(ix+*),h", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E5", "set 4,(ix+*),l", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E6", "set 4,(ix+*)", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**E7", "set 4,(ix+*),a", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E8", "set 5,(ix+*),b", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**E9", "set 5,(ix+*),c", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**EA", "set 5,(ix+*),d", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**EB", "set 5,(ix+*),e", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**EC", "set 5,(ix+*),h", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**ED", "set 5,(ix+*),l", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**EE", "set 5,(ix+*)", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**EF", "set 5,(ix+*),a", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F0", "set 6,(ix+*),b", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F1", "set 6,(ix+*),c", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F2", "set 6,(ix+*),d", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F3", "set 6,(ix+*),e", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F4", "set 6,(ix+*),h", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F5", "set 6,(ix+*),l", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F6", "set 6,(ix+*)", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**F7", "set 6,(ix+*),a", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F8", "set 7,(ix+*),b", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**F9", "set 7,(ix+*),c", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**FA", "set 7,(ix+*),d", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**FB", "set 7,(ix+*),e", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**FC", "set 7,(ix+*),h", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**FD", "set 7,(ix+*),l", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("DDCB**FE", "set 7,(ix+*)", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("DDCB**FF", "set 7,(ix+*),a", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by ix plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD09", "add iy,bc", 2, new int[] { 15 }, "The value of bc is added to iy.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD19", "add iy,de", 2, new int[] { 15 }, "The value of de is added to iy.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD21", "ld iy,**", 4, new int[] { 14 }, "Loads ** into register iy.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD22", "ld (**),iy", 4, new int[] { 20 }, "Stores iy into the memory location pointed to by **.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD23", "inc iy", 2, new int[] { 10 }, "Adds one to iy.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD24", "inc iyh", 2, new int[] { 8 }, "Adds one to iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD25", "dec iyh", 2, new int[] { 8 }, "Subtracts one from iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD26", "ld iyh,*", 3, new int[] { 11 }, "Loads * into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD29", "add iy,iy", 2, new int[] { 15 }, "The value of ix is added to iy.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD2A", "ld iy,(**)", 4, new int[] { 20 }, "Loads the value pointed to by ** into iy.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD2B", "dec iy", 2, new int[] { 10 }, "Subtracts one from iy.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD2C", "inc iyl", 2, new int[] { 8 }, "Adds one to iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD2D", "dec iyl", 2, new int[] { 8 }, "Subtracts one from iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD2E", "ld iyl,*", 3, new int[] { 11 }, "Loads * into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD34", "inc (iy+*)", 3, new int[] { 23 }, "Adds one to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FD35", "dec (iy+*)", 3, new int[] { 23 }, "Subtracts one from the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Set, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FD36", "ld (iy+*),*", 4, new int[] { 19 }, "Stores * to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD39", "add iy,sp", 2, new int[] { 15 }, "The value of sp is added to iy.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.AffectedAsDefined, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD44", "ld b,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD45", "ld b,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD46", "ld b,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into b.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD4C", "ld c,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD4D", "ld c,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD4E", "ld c,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into c.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD54", "ld d,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD55", "ld d,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD56", "ld d,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into d.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD5C", "ld e,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD5D", "ld e,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD5E", "ld e,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into e.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD60", "ld iyh,b", 2, new int[] { 8 }, "The contents of b are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD61", "ld iyh,c", 2, new int[] { 8 }, "The contents of c are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD62", "ld iyh,d", 2, new int[] { 8 }, "The contents of d are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD63", "ld iyh,e", 2, new int[] { 8 }, "The contents of e are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD64", "ld iyh,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD65", "ld iyh,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD66", "ld h,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into h.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD67", "ld iyh,a", 2, new int[] { 8 }, "The contents of a are loaded into iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD68", "ld iyl,b", 2, new int[] { 8 }, "The contents of b are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD69", "ld iyl,c", 2, new int[] { 8 }, "The contents of c are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD6A", "ld iyl,d", 2, new int[] { 8 }, "The contents of d are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD6B", "ld iyl,e", 2, new int[] { 8 }, "The contents of e are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD6C", "ld iyl,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD6D", "ld iyl,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD6E", "ld l,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into l.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD6F", "ld iyl,a", 2, new int[] { 8 }, "The contents of a are loaded into iyl.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD70", "ld (iy+*),b", 3, new int[] { 19 }, "Stores b to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD71", "ld (iy+*),c", 3, new int[] { 19 }, "Stores c to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD72", "ld (iy+*),d", 3, new int[] { 19 }, "Stores d to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD73", "ld (iy+*),e", 3, new int[] { 19 }, "Stores e to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD74", "ld (iy+*),h", 3, new int[] { 19 }, "Stores h to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD75", "ld (iy+*),l", 3, new int[] { 19 }, "Stores l to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD77", "ld (iy+*),a", 3, new int[] { 19 }, "Stores a to the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD7C", "ld a,iyh", 2, new int[] { 8 }, "The contents of iyh are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD7D", "ld a,iyl", 2, new int[] { 8 }, "The contents of iyl are loaded into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FD7E", "ld a,(iy+*)", 3, new int[] { 19 }, "Loads the value pointed to by iy plus * into a.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FD84", "add a,iyh", 2, new int[] { 8 }, "Adds iyh to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD85", "add a,iyl", 2, new int[] { 8 }, "Adds iyl to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD86", "add a,(iy+*)", 3, new int[] { 19 }, "Adds the value pointed to by iy plus * to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FD8C", "adc a,iyh", 2, new int[] { 8 }, "Adds iyh and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD8D", "adc a,iyl", 2, new int[] { 8 }, "Adds iyl and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD8E", "adc a,(iy+*)", 3, new int[] { 19 }, "Adds the value pointed to by iy plus * and the carry flag to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FD94", "sub iyh", 2, new int[] { 8 }, "Subtracts iyh from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD95", "sub iyl", 2, new int[] { 8 }, "Subtracts iyl from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD96", "sub (iy+*)", 3, new int[] { 19 }, "Subtracts the value pointed to by iy plus * from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FD9C", "sbc a,iyh", 2, new int[] { 8 }, "Subtracts iyh and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD9D", "sbc a,iyl", 2, new int[] { 8 }, "Subtracts iyl and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FD9E", "sbc a,(iy+*)", 3, new int[] { 19 }, "Subtracts the value pointed to by iy plus * and the carry flag from a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDA4", "and iyh", 2, new int[] { 8 }, "Bitwise AND on a with iyh.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDA5", "and iyl", 2, new int[] { 8 }, "Bitwise AND on a with iyl.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDA6", "and (iy+*)", 3, new int[] { 19 }, "Bitwise AND on a with the value pointed to by iy plus *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Set, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDAC", "xor iyh", 2, new int[] { 8 }, "Bitwise XOR on a with iyh.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDAD", "xor iyl", 2, new int[] { 8 }, "Bitwise XOR on a with iyl.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDAE", "xor (iy+*)", 3, new int[] { 19 }, "Bitwise XOR on a with the value pointed to by iy plus *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDB4", "or iyh", 2, new int[] { 8 }, "Bitwise OR on a with iyh.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDB5", "or iyl", 2, new int[] { 8 }, "Bitwise OR on a with iyl.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDB6", "or (iy+*)", 3, new int[] { 19 }, "Bitwise OR on a with the value pointed to by iy plus *.", new FlagType[] { FlagType.Reset, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDBC", "cp iyh", 2, new int[] { 8 }, "Subtracts iyh from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDBD", "cp iyl", 2, new int[] { 8 }, "Subtracts iyl from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDBE", "cp (iy+*)", 3, new int[] { 19 }, "Subtracts the value pointed to by iy plus * from a and affects flags according to the result. a is not modified.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDE1", "pop iy", 2, new int[] { 14 }, "The memory location pointed to by sp is stored into iyl and sp is incremented. The memory location pointed to by sp is stored into iyh and sp is incremented again.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDE3", "ex (sp),iy", 2, new int[] { 23 }, "Exchanges (sp) with the iyl, and (sp+1) with the iyh.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDE5", "push iy", 2, new int[] { 15 }, "sp is decremented and iyh is stored into the memory location pointed to by sp. sp is decremented again and iyl is stored into the memory location pointed to by sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDE9", "jp (iy)", 2, new int[] { 8 }, "Loads the value of iy into pc.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDF9", "ld sp,iy", 2, new int[] { 10 }, "Loads the value of iy into sp.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**00", "rlc (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**01", "rlc (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**02", "rlc (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**03", "rlc (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**04", "rlc (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**05", "rlc (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**06", "rlc (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**07", "rlc (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**08", "rrc (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**09", "rrc (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**0A", "rrc (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**0B", "rrc (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**0C", "rrc (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**0D", "rrc (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**0E", "rrc (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**0F", "rrc (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**10", "rl (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**11", "rl (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**12", "rl (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**13", "rl (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**14", "rl (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**15", "rl (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**16", "rl (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**17", "rl (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**18", "rr (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**19", "rr (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**1A", "rr (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**1B", "rr (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**1C", "rr (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**1D", "rr (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**1E", "rr (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**1F", "rr (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**20", "sla (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**21", "sla (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**22", "sla (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**23", "sla (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**24", "sla (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**25", "sla (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**26", "sla (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**27", "sla (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**28", "sra (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**29", "sra (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**2A", "sra (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**2B", "sra (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**2C", "sra (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**2D", "sra (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**2E", "sra (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**2F", "sra (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**30", "sll (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**31", "sll (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**32", "sll (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**33", "sll (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**34", "sll (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**35", "sll (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**36", "sll (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**37", "sll (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**38", "srl (iy+*),b", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in b.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**39", "srl (iy+*),c", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in c.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**3A", "srl (iy+*),d", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in d.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**3B", "srl (iy+*),e", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in e.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**3C", "srl (iy+*),h", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in h.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**3D", "srl (iy+*),l", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in l.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**3E", "srl (iy+*)", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("FDCB**3F", "srl (iy+*),a", 4, new int[] { 23 }, "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.Reset, FlagType.DetectsParity, FlagType.Reset, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, true, false),
            new Z80Node("FDCB**40", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**41", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**42", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**43", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**44", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**45", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**46", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**47", "bit 0,(iy+*)", 4, new int[] { 20 }, "Tests bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**48", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**49", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**4A", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**4B", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**4C", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**4D", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**4E", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**4F", "bit 1,(iy+*)", 4, new int[] { 20 }, "Tests bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**50", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**51", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**52", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**53", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**54", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**55", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**56", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**57", "bit 2,(iy+*)", 4, new int[] { 20 }, "Tests bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**58", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**59", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**5A", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**5B", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**5C", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**5D", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**5E", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**5F", "bit 3,(iy+*)", 4, new int[] { 20 }, "Tests bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**60", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**61", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**62", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**63", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**64", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**65", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**66", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**67", "bit 4,(iy+*)", 4, new int[] { 20 }, "Tests bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**68", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**69", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**6A", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**6B", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**6C", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**6D", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**6E", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**6F", "bit 5,(iy+*)", 4, new int[] { 20 }, "Tests bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**70", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**71", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**72", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**73", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**74", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**75", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**76", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**77", "bit 6,(iy+*)", 4, new int[] { 20 }, "Tests bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**78", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**79", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**7A", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**7B", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**7C", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**7D", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**7E", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, false, false),
            new Z80Node("FDCB**7F", "bit 7,(iy+*)", 4, new int[] { 20 }, "Tests bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Reset, FlagType.Unknown, FlagType.Set, FlagType.AffectedAsDefined, FlagType.Unknown }, true, false),
            new Z80Node("FDCB**80", "res 0,(iy+*),b", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**81", "res 0,(iy+*),c", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**82", "res 0,(iy+*),d", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**83", "res 0,(iy+*),e", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**84", "res 0,(iy+*),h", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**85", "res 0,(iy+*),l", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**86", "res 0,(iy+*)", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**87", "res 0,(iy+*),a", 4, new int[] { 23 }, "Resets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**88", "res 1,(iy+*),b", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**89", "res 1,(iy+*),c", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**8A", "res 1,(iy+*),d", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**8B", "res 1,(iy+*),e", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**8C", "res 1,(iy+*),h", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**8D", "res 1,(iy+*),l", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**8E", "res 1,(iy+*)", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**8F", "res 1,(iy+*),a", 4, new int[] { 23 }, "Resets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**90", "res 2,(iy+*),b", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**91", "res 2,(iy+*),c", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**92", "res 2,(iy+*),d", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**93", "res 2,(iy+*),e", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**94", "res 2,(iy+*),h", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**95", "res 2,(iy+*),l", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**96", "res 2,(iy+*)", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**97", "res 2,(iy+*),a", 4, new int[] { 23 }, "Resets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**98", "res 3,(iy+*),b", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**99", "res 3,(iy+*),c", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**9A", "res 3,(iy+*),d", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**9B", "res 3,(iy+*),e", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**9C", "res 3,(iy+*),h", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**9D", "res 3,(iy+*),l", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**9E", "res 3,(iy+*)", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**9F", "res 3,(iy+*),a", 4, new int[] { 23 }, "Resets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A0", "res 4,(iy+*),b", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A1", "res 4,(iy+*),c", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A2", "res 4,(iy+*),d", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A3", "res 4,(iy+*),e", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A4", "res 4,(iy+*),h", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A5", "res 4,(iy+*),l", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A6", "res 4,(iy+*)", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**A7", "res 4,(iy+*),a", 4, new int[] { 23 }, "Resets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A8", "res 5,(iy+*),b", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**A9", "res 5,(iy+*),c", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**AA", "res 5,(iy+*),d", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**AB", "res 5,(iy+*),e", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**AC", "res 5,(iy+*),h", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**AD", "res 5,(iy+*),l", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**AE", "res 5,(iy+*)", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**AF", "res 5,(iy+*),a", 4, new int[] { 23 }, "Resets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B0", "res 6,(iy+*),b", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B1", "res 6,(iy+*),c", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B2", "res 6,(iy+*),d", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B3", "res 6,(iy+*),e", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B4", "res 6,(iy+*),h", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B5", "res 6,(iy+*),l", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B6", "res 6,(iy+*)", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**B7", "res 6,(iy+*),a", 4, new int[] { 23 }, "Resets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B8", "res 7,(iy+*),b", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**B9", "res 7,(iy+*),c", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**BA", "res 7,(iy+*),d", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**BB", "res 7,(iy+*),e", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**BC", "res 7,(iy+*),h", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**BD", "res 7,(iy+*),l", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**BE", "res 7,(iy+*)", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**BF", "res 7,(iy+*),a", 4, new int[] { 23 }, "Resets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C0", "set 0,(iy+*),b", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C1", "set 0,(iy+*),c", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C2", "set 0,(iy+*),d", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C3", "set 0,(iy+*),e", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C4", "set 0,(iy+*),h", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C5", "set 0,(iy+*),l", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C6", "set 0,(iy+*)", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**C7", "set 0,(iy+*),a", 4, new int[] { 23 }, "Sets bit 0 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C8", "set 1,(iy+*),b", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**C9", "set 1,(iy+*),c", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**CA", "set 1,(iy+*),d", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**CB", "set 1,(iy+*),e", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**CC", "set 1,(iy+*),h", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**CD", "set 1,(iy+*),l", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**CE", "set 1,(iy+*)", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**CF", "set 1,(iy+*),a", 4, new int[] { 23 }, "Sets bit 1 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D0", "set 2,(iy+*),b", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D1", "set 2,(iy+*),c", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D2", "set 2,(iy+*),d", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D3", "set 2,(iy+*),e", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D4", "set 2,(iy+*),h", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D5", "set 2,(iy+*),l", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D6", "set 2,(iy+*)", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**D7", "set 2,(iy+*),a", 4, new int[] { 23 }, "Sets bit 2 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D8", "set 3,(iy+*),b", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**D9", "set 3,(iy+*),c", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**DA", "set 3,(iy+*),d", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**DB", "set 3,(iy+*),e", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**DC", "set 3,(iy+*),h", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**DD", "set 3,(iy+*),l", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**DE", "set 3,(iy+*)", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**DF", "set 3,(iy+*),a", 4, new int[] { 23 }, "Sets bit 3 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E0", "set 4,(iy+*),b", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E1", "set 4,(iy+*),c", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E2", "set 4,(iy+*),d", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E3", "set 4,(iy+*),e", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E4", "set 4,(iy+*),h", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E5", "set 4,(iy+*),l", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E6", "set 4,(iy+*)", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**E7", "set 4,(iy+*),a", 4, new int[] { 23 }, "Sets bit 4 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E8", "set 5,(iy+*),b", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**E9", "set 5,(iy+*),c", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**EA", "set 5,(iy+*),d", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**EB", "set 5,(iy+*),e", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**EC", "set 5,(iy+*),h", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**ED", "set 5,(iy+*),l", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**EE", "set 5,(iy+*)", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**EF", "set 5,(iy+*),a", 4, new int[] { 23 }, "Sets bit 5 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F0", "set 6,(iy+*),b", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F1", "set 6,(iy+*),c", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F2", "set 6,(iy+*),d", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F3", "set 6,(iy+*),e", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F4", "set 6,(iy+*),h", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F5", "set 6,(iy+*),l", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F6", "set 6,(iy+*)", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**F7", "set 6,(iy+*),a", 4, new int[] { 23 }, "Sets bit 6 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F8", "set 7,(iy+*),b", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**F9", "set 7,(iy+*),c", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**FA", "set 7,(iy+*),d", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**FB", "set 7,(iy+*),e", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**FC", "set 7,(iy+*),h", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**FD", "set 7,(iy+*),l", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("FDCB**FE", "set 7,(iy+*)", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, false, false),
            new Z80Node("FDCB**FF", "set 7,(iy+*),a", 4, new int[] { 23 }, "Sets bit 7 of the memory location pointed to by iy plus *.", new FlagType[] { FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected, FlagType.Unaffected }, true, false),
            new Z80Node("87", "add a", 1, new int[] { 4 }, "Adds a to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
            new Z80Node("C6", "add *", 2, new int[] { 7 }, "Adds * to a.", new FlagType[] { FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.DetectsOverflow, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined, FlagType.AffectedAsDefined }, false, false),
        };
    }
}
